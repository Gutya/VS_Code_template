// Place your key bindings in this file to override the defaults
[
    // Toggle between terminal and editor focus
{ 
    "key": "alt+d", 
    "command": "workbench.action.terminal.focus"
},
{
    "key": "alt+d",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
},
{
    "key": "f3",
    "command": "-editor.action.nextMatchFindAction",
    "when": "editorFocus"
},
{
    "key": "f3",
    "command": "-workbench.action.terminal.findNext",
    "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
},
{
    "key": "f3",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
},
{
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
},
{
    "key": "ctrl+shift+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
},
{
    "key": "ctrl+shift+d",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
},
{
    "key": "shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
},
{
    "key": "ctrl+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
},
{
    "key": "ctrl+d",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
},
{
    "key": "ctrl+shift+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
},
{
    "key": "f7",
    "command": "-editor.action.diffReview.next",
    "when": "isInDiffEditor"
},
{
    "key": "f7",
    "command": "-editor.action.wordHighlight.next",
    "when": "editorTextFocus && hasWordHighlights"
},
{
    "key": "alt+x",
    "command": "workbench.action.tasks.build"
},
{
    "key": "ctrl+shift+b",
    "command": "-workbench.action.tasks.build"
},
{
    "key": "alt+z",
    "command": "-editor.action.toggleWordWrap"
},
{
    "key": "alt+s",
    "command": "workbench.action.togglePanel"
},
{
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
},
{
    "key": "ctrl+shift+down",
    "command": "-cursorDownSelect",
    "when": "textInputFocus"
},
{
    "key": "ctrl+shift+up",
    "command": "-cursorUpSelect",
    "when": "textInputFocus"
},
{
    "key": "ctrl+shift+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
},
{
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
},
{
    "key": "ctrl+shift+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
},
{
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
},
{
    "key": "ctrl+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
},
{
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
},
{
    "key": "ctrl+r",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
},
{
    "key": "ctrl+/",
    "command": "-editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
},
{
    "key": "ctrl+shift+r",
    "command": "-editor.action.refactor",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
},
{
    "key": "ctrl+shift+r",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
},
{
    "key": "shift+alt+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
},
{
    "key": "alt+e",
    "command": "workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
},
{
    "key": "ctrl+shift+m",
    "command": "-workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
}
]